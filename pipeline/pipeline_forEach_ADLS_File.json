{
	"name": "pipeline_forEach_ADLS_File",
	"properties": {
		"activities": [
			{
				"name": "GetMetaDataADLS_parque",
				"description": "get description of parquet files in the ADLS account",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ADLS_parquetFiles",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "ParquetReadSettings"
					}
				}
			},
			{
				"name": "ForEachItem",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetMetaDataADLS_parque",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetMetaDataADLS_parque').output.childItems",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "copyDataItem",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ParquetSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFileName": "*.parquet",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "ParquetReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"name": "Correlationid",
												"type": "String",
												"physicalType": "UTF8"
											},
											"sink": {
												"name": "Correlationid",
												"type": "String",
												"physicalType": "varchar"
											}
										},
										{
											"source": {
												"name": "Operationname",
												"type": "String",
												"physicalType": "UTF8"
											},
											"sink": {
												"name": "Operationname",
												"type": "String",
												"physicalType": "varchar"
											}
										},
										{
											"source": {
												"name": "Status",
												"type": "String",
												"physicalType": "UTF8"
											},
											"sink": {
												"name": "Status",
												"type": "String",
												"physicalType": "varchar"
											}
										},
										{
											"source": {
												"name": "Eventcategory",
												"type": "String",
												"physicalType": "UTF8"
											},
											"sink": {
												"name": "Eventcategory",
												"type": "String",
												"physicalType": "varchar"
											}
										},
										{
											"source": {
												"name": "Level",
												"type": "String",
												"physicalType": "UTF8"
											},
											"sink": {
												"name": "Level",
												"type": "String",
												"physicalType": "varchar"
											}
										},
										{
											"source": {
												"name": "Time",
												"type": "String",
												"physicalType": "UTF8"
											},
											"sink": {
												"name": "Time",
												"type": "DateTime",
												"physicalType": "datetime"
											}
										},
										{
											"source": {
												"name": "Subscription",
												"type": "String",
												"physicalType": "UTF8"
											},
											"sink": {
												"name": "Subscription",
												"type": "String",
												"physicalType": "varchar"
											}
										},
										{
											"source": {
												"name": "Eventinitiatedby",
												"type": "String",
												"physicalType": "UTF8"
											},
											"sink": {
												"name": "Eventinitiatedby",
												"type": "String",
												"physicalType": "varchar"
											}
										},
										{
											"source": {
												"name": "Resourcetype",
												"type": "String",
												"physicalType": "UTF8"
											},
											"sink": {
												"name": "Resourcetype",
												"type": "String",
												"physicalType": "varchar"
											}
										},
										{
											"source": {
												"name": "Resourcegroup",
												"type": "String",
												"physicalType": "UTF8"
											},
											"sink": {
												"name": "Resourcegroup",
												"type": "String",
												"physicalType": "varchar"
											}
										},
										{
											"source": {
												"name": "Resource",
												"type": "String",
												"physicalType": "UTF8"
											},
											"sink": {
												"name": "Resource",
												"type": "String",
												"physicalType": "varchar"
											}
										}
									],
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ParquetForEachdataset",
									"type": "DatasetReference",
									"parameters": {
										"fileName": {
											"value": "@item().Name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "AzureSqlTablesrcActivity",
									"type": "DatasetReference"
								}
							]
						}
					]
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2025-05-23T18:02:13Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}